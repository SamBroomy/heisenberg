[workspace]
resolver = "2"
members = ["crates/*"]
default-members = ["crates/heisenberg", "crates/heisenberg-data-processing"]

[workspace.package]
edition = "2024"
rust-version = "1.89"
version = "0.1.0"
authors = ["SamBroomy"]
license = "MIT"
repository = "https://github.com/SamBroomy/heisenberg"
homepage = "https://github.com/SamBroomy/heisenberg"
readme = "README.md"
description = "Backfill and enrich unstructured location data into structured data using the Geonames Dataset."
categories = ["science::geo"]
keywords = [
    "geonames",
    "polars",
    "location-enrichment",
    "data-processing",
    "geocoding",
    "location",
    "parsing",
]


[workspace.dependencies]
# Shared dependencies across workspace
polars = { version = "0.49", features = [
    "polars-io",
    "lazy",
    "parquet",
    "log",
    "strings",
    "round_series",
    "regex",
    "is_in",
    "fmt",
    "dtype-u8",
    "dtype-u16",
    "dtype-struct",
    "dtype-categorical",
    "trigonometry",
    "csv",
    "semi_anti_join",
    "cse",
    #"dtype-i128",
] }
directories = "6"
once_cell = "1.21"
tempfile = "3"
tracing = { version = "0.1", features = ["log"] }
anyhow = "1.0"
thiserror = "2.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
itertools = "0.14"
zip = "4"
chrono = { version = "0.4.41", features = ["serde"] }
reqwest = { version = "0.12", features = ["stream"] }
tokio = { version = "1", features = [
    "rt-multi-thread",
    "fs",
    "macros",
    "io-util",
] }
futures = "0.3"
indicatif = "0.17.11"

ahash = "0.8.12"
rapidfuzz = "0.5"
rayon = "1.10"
regex = "1.11"
tantivy = "0.24"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"] }
bytes = "1"
# Python bindings (optional)
pyo3 = { version = "0.25", default-features = false, features = [
    "extension-module",
    "macros",
] }
pyo3-polars = { version = "0.22.0" }
#pythonize = { version = "0.24.0" }
pyo3-log = { version = "0.12.4" }
num-traits = "0.2"

heisenberg = { version = "0.1.0", path = "crates/heisenberg" }
heisenberg-data-processing = { version = "0.1.0", path = "crates/heisenberg-data-processing" }

[workspace.lints.clippy]
multiple_crate_versions = "allow"
# But allow some pedantic lints that might be too strict
module_name_repetitions = "allow"
similar_names = "allow"
too_many_lines = "allow"
cast_precision_loss = "allow"
cast_possible_wrap = "allow"
cast_sign_loss = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"

unreadable_literal = "allow"

#must_use_candidate = "allow" # --fix fixes this
return_self_not_must_use = "allow" # --fix does not fix this
cast_possible_truncation = "allow"

# Specific lints to deny (treat as errors)
dbg_macro = "deny"
todo = "deny"
unimplemented = "deny"
#unwrap_used = "deny"

#unreadable_literal = "warn"
redundant_else = "warn"
needless_pass_by_value = "warn"


# Nursery lints (experimental but useful)
use_self = "warn"
option_if_let_else = "warn"
redundant_pub_crate = "warn"


# Enable Clippy lints for the entire workspace
all = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }
correctness = { level = "warn", priority = -1 }
suspicious = { level = "warn", priority = -1 }
complexity = { level = "warn", priority = -1 }
perf = { level = "warn", priority = -1 }
style = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
[workspace.lints.rust]
# Standard Rust lints
#smissing_docs = "warn"
unsafe_code = "forbid"
rust_2018_idioms = { level = "warn", priority = -1 }
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unused_import_braces = "warn"
unused_qualifications = "warn"
