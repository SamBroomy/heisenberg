[project]
name = "heisenberg"
version = "0.1.0"
description = "Location enrichment library for converting unstructured location data into structured administrative hierarchies using GeoNames"
readme = "python/README.md"
requires-python = ">=3.8"
authors = [{ name = "SamBroomy", email = "sam@example.com" }]
license = { file = "LICENSE" }
keywords = [
    "geonames",
    "location",
    "geocoding",
    "data-processing",
    "location-enrichment",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Rust",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "typing-extensions>=4.0.0; python_version<'3.11'",
    "polars>=1.0",
]


[dependency-groups]
dev = ["maturin>=1.8.7", "pytest>=8.3.5", "ruff>=0.11.11"]

[build-system]
requires = ["maturin>=1,<2"]
build-backend = "maturin"

[tool.maturin]
bindings = "pyo3"
features = ["python"]
python-source = "python"
manifest-path = "crates/heisenberg/Cargo.toml"


[tool.ruff]
line-length = 120
src = ["src", "tests"]
show-fixes = true

[tool.ruff.lint]
select = [
    "F", # Pyflakes
    "E", # Pycodestyle errors
    #"C90", # McCabe complexity
    "I",     # isort
    "N",     # pep8-naming
    "UP",    # Pyupgrade
    "ANN",   # Flake8-annotations
    "ASYNC", # Flake8-async
    #"BLE",   # Flake8-blind-except
    "FBT", # Flake8-boolean-trap
    "B",   # Flake8-bugbear
    "A",   # Flake8-builtins
    #"COM",  # Flake9-commas
    "C4",  # Flake8-comprehensions
    "EM",  # Flake8-errmsgs
    "FA",  # Flake8-future-annotations
    "ISC", # Flake8-implicit-str-concat
    "LOG", # Flake8-logging
    "G",   # Flake8-logging-format
    "INP", # Flake8-no-pep420
    "PIE", # Flake8-pie
    # "T20", # Flake8-print
    "PT",  # Flake8-pytest
    "Q",   # Flake8-quotes
    "RSE", # Flake8-raise
    "RET", # Flake8-return
    #SLF", # Flake8-self
    "SIM", # Flake8-simplify
    "TID", # Flake8-tidy-imports
    "TC",  # Flake8-type-checking
    "INT", # Flake8-gettext
    "ARG", # Flake8-unused-arguments
    "PTH", # Flake8-pathlib
    "TD",  # Flake8-todo
    "ERA", # Flake8-eradicate
    "PLC", # Pylint-convention
    "PLE", # Pylint-error
    "PLW", # Pylint-warning
    #"PLR", # Pylint-refactor
    "TRY",  # Flake8-tryceratops
    "FLY",  # Flint
    "NPY",  # Numpy
    "FAST", # Fast-Api
    "PERF", # Perflint
    "FURB", # Refurb
    "RUF",  # Ruff


]
preview = true
# Allow fix for all enabled rules
fixable = ["ALL"]
#  "PLC2701", "N804",
ignore = ["ANN401", "ANN003", "G004", "UP046", "PLC2701", "N804"]
isort.split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"python/tests/**.py" = ["ANN201", "PT011", "ANN001", "ARG002"]
[tool.ruff.format]
skip-magic-trailing-comma = true
preview = true
docstring-code-format = true
docstring-code-line-length = "dynamic"
