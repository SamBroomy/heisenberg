repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # - id: no-commit-to-branch
      #   args: [--branch, main]
      #   stages: [pre-commit]
      - id: check-added-large-files
        stages: [pre-commit]
      - id: check-ast
        stages: [pre-commit]
      - id: check-merge-conflict
        stages: [pre-commit]
      - id: check-toml
        stages: [pre-commit]
      - id: check-yaml
        stages: [pre-commit]
      - id: detect-private-key
        stages: [pre-commit]
      - id: end-of-file-fixer
        stages: [pre-commit]
      - id: mixed-line-ending
        stages: [pre-commit]
      - id: trailing-whitespace
        stages: [pre-commit]

  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.7.12
    hooks:
      - id: uv-sync
        args: ["--locked", "--all-packages"]
      - id: uv-lock

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.13
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix, --unsafe-fixes]
        types_or: [python]
        stages: [pre-commit]
        files: '^python/.*\.py$'
        types: [python]
      - id: ruff-format
        name: ruff format
        files: '^python/.*\.py$'
        types: [python]

  - repo: local
    hooks:
      # Justfile hooks
      - id: just-fmt
        name: just fmt
        entry: just --unstable --fmt
        language: system
        files: ^justfile$
        stages: [pre-commit]
        pass_filenames: false
      # Cargo machete (only when Cargo.toml changes)
      - id: cargo-machete
        name: cargo machete
        description: Find unused dependencies
        entry: cargo machete --fix
        language: system
        files: '^Cargo\.toml$'
        types: [toml]
        pass_filenames: false
      # Cargo audit (only when Cargo.lock changes or on manual trigger)
      - id: cargo-audit
        name: cargo audit
        description: Audit for security vulnerabilities
        entry: cargo audit --deny unsound --deny yanked
        language: system
        files: '^Cargo\.lock$'
        types: [toml]
        pass_filenames: false
        stages: [manual, pre-push]
      # Clippy (only on Rust files or Cargo.toml changes)
      - id: cargo-clippy
        name: cargo clippy
        description: Run cargo clippy with fixes
        entry: cargo clippy --workspace --all-targets --all-features --fix --allow-staged --quiet -- -D warnings
        language: system
        files: '(\.rs$|Cargo\.toml$|Cargo\.lock$)'
        types_or: [rust, toml]
        pass_filenames: false
      # Cargo fmt (only on Rust files)
      - id: cargo-fmt
        name: cargo fmt
        description: Format Rust code with cargo fmt
        entry: cargo +nightly fmt --all
        language: system
        files: '\.rs$'
        types: [rust]
        pass_filenames: false
      # Cargo doc (documentation check)
      - id: cargo-doc
        name: cargo doc
        description: Check documentation builds
        entry: cargo doc --all-features
        language: system
        files: '(src/.*\.rs$|Cargo\.toml)$'
        types: [rust, toml]
        stages: [pre-commit]
        pass_filenames: false
      # Cargo test (only on significant Rust changes)
      - id: cargo-test
        name: cargo test
        description: Run cargo test suite
        entry: cargo test --workspace -- --test-threads=1
        language: system
        files: '(src/.*\.rs$|tests/.*\.rs$|Cargo\.toml$)'
        types_or: [rust, toml]
        pass_filenames: false
        stages: [pre-push] # Only run on push, not every commit
